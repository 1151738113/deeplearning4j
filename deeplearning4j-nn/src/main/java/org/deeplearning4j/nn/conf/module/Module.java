/*
 *
 *  * Copyright 2015 Skymind,Inc.
 *  *
 *  *    Licensed under the Apache License, Version 2.0 (the "License");
 *  *    you may not use this file except in compliance with the License.
 *  *    You may obtain a copy of the License at
 *  *
 *  *        http://www.apache.org/licenses/LICENSE-2.0
 *  *
 *  *    Unless required by applicable law or agreed to in writing, software
 *  *    distributed under the License is distributed on an "AS IS" BASIS,
 *  *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  *    See the License for the specific language governing permissions and
 *  *    limitations under the License.
 *
 */

package org.deeplearning4j.nn.conf.module;

import lombok.Data;
import lombok.NoArgsConstructor;
import org.deeplearning4j.berkeley.Pair;
import org.deeplearning4j.nn.conf.layers.Layer;

import java.io.Serializable;
import java.util.Collection;

/**
 * Module for nn layers. Allows for creation of plugins and modules to generate configurations and layers.
 *
 * @author Justin Long (crockpotveggies)
 */
@Data
@NoArgsConstructor
public abstract class Module implements Serializable, Cloneable {
    protected String moduleName;
    protected Collection<Pair<String, Layer>> layers;

    /**
     * Add a layer to the collection of layers being generated by this module.
     *
     * @param layer
     */
    public abstract void addLayer(String layerName, Layer layer);


    public abstract static class Builder<T extends Builder<T>> {
        protected String moduleName = null;


        /**
         * Layer name assigns layer string name.
         * Allows easier differentiation between layers.
         */
        public T name(String moduleName) {
            this.moduleName = moduleName;
            return (T) this;
        }


        public abstract <E extends Module> E build();
    }
}
